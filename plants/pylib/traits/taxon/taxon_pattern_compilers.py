from pathlib import Path

from traiter.pylib.traits import trait_util
from traiter.pylib.traits.pattern_compiler import Compiler

RANK_CSV = Path(__file__).parent / "rank_terms.csv"

RANK_TERMS = trait_util.read_terms(RANK_CSV)
HIGHER_RANK = sorted({r["label"] for r in RANK_TERMS})

ABBREV_RE = r"^[A-Z][.,_]$"


def taxon_compilers():
    decoder = {
        ":": {"TEXT": {"IN": [":", ";"]}},
        "A.": {"TEXT": {"REGEX": ABBREV_RE}},
        "bad_prefix": {"ENT_TYPE": "bad_prefix"},
        "bad_suffix": {"ENT_TYPE": "bad_suffix"},
        "maybe": {"POS": {"IN": ["PROPN", "NOUN"]}},
        "binomial": {"ENT_TYPE": "binomial"},
        "monomial": {"ENT_TYPE": "monomial"},
        "higher_rank": {"ENT_TYPE": {"IN": HIGHER_RANK}},
        "subsp": {"ENT_TYPE": "subspecies_rank"},
        "var": {"ENT_TYPE": "variety_rank"},
        "subvar": {"ENT_TYPE": "subvariety_rank"},
        "f.": {"ENT_TYPE": "form_rank"},
        "subf": {"ENT_TYPE": "subform_rank"},
        "species_rank": {"ENT_TYPE": "species_rank"},
    }

    return [
        Compiler(
            label="taxon",
            id="singleton",
            decoder=decoder,
            patterns=[
                "monomial",
                "higher_rank  monomial",
                "species_rank monomial",
            ],
        ),
        Compiler(
            label="taxon",
            id="species",
            decoder=decoder,
            patterns=[
                "binomial+",
                "monomial monomial",
                "A. monomial",
            ],
        ),
        Compiler(
            label="taxon",
            id="subspecies",
            decoder=decoder,
            patterns=[
                "   binomial+ subsp? monomial",
                "   binomial+ subsp  maybe",
                "A. monomial  subsp? monomial",
                "A. monomial  subsp  maybe",
                "A. maybe     subsp? monomial",
                "A. maybe     subsp  maybe",
            ],
        ),
        Compiler(
            label="taxon",
            id="variety",
            decoder=decoder,
            patterns=[
                "   binomial+                var monomial",
                "   binomial+ subsp monomial var monomial",
                "   binomial+                var maybe",
                "   binomial+ subsp monomial var maybe",
                "A. monomial                 var monomial",
                "A. monomial  subsp monomial var monomial",
                "A. monomial                 var maybe",
                "A. monomial  subsp monomial var maybe",
                "A. monomial                 var monomial",
                "A. monomial  subsp monomial var monomial",
                "A. monomial                 var maybe",
                "A. monomial  subsp monomial var maybe",
                "A. maybe                    var monomial",
                "A. maybe     subsp monomial var monomial",
                "A. maybe                    var maybe",
                "A. maybe     subsp monomial var maybe",
                "A. maybe                    var monomial",
                "A. maybe     subsp monomial var monomial",
                "A. maybe                    var maybe",
                "A. maybe     subsp monomial var maybe",
            ],
        ),
        Compiler(
            label="taxon",
            id="subvariety",
            decoder=decoder,
            patterns=[
                "   binomial+                subvar monomial",
                "   binomial+ var   monomial subvar monomial",
                "   binomial+ subsp monomial subvar monomial",
                "   binomial+                subvar maybe",
                "   binomial+ var   monomial subvar maybe",
                "   binomial+ subsp monomial subvar maybe",
                "   binomial+ var   maybe    subvar maybe",
                "   binomial+ subsp maybe    subvar maybe",
                "   binomial+ var   maybe    subvar monomial",
                "   binomial+ subsp maybe    subvar monomial",
                "A. monomial                 subvar monomial",
                "A. monomial  var   monomial subvar monomial",
                "A. monomial  subsp monomial subvar monomial",
                "A. monomial                 subvar maybe",
                "A. monomial  var   monomial subvar maybe",
                "A. monomial  subsp monomial subvar maybe",
                "A. monomial  var   maybe    subvar maybe",
                "A. monomial  subsp maybe    subvar maybe",
                "A. monomial  var   maybe    subvar monomial",
                "A. monomial  subsp maybe    subvar monomial",
                "A. maybe                    subvar monomial",
                "A. maybe     var   monomial subvar monomial",
                "A. maybe     subsp monomial subvar monomial",
                "A. maybe                    subvar maybe",
                "A. maybe     var   monomial subvar maybe",
                "A. maybe     subsp monomial subvar maybe",
                "A. maybe     var   maybe    subvar maybe",
                "A. maybe     subsp maybe    subvar maybe",
                "A. maybe     var   maybe    subvar monomial",
                "A. maybe     subsp maybe    subvar monomial",
            ],
        ),
        Compiler(
            label="taxon",
            id="form",
            decoder=decoder,
            patterns=[
                "   binomial+                f. monomial",
                "   binomial+ var   monomial f. monomial",
                "   binomial+ subsp monomial f. monomial",
                "   binomial+                f. maybe",
                "   binomial+ var   monomial f. maybe",
                "   binomial+ subsp monomial f. maybe",
                "   binomial+ var   maybe    f. maybe",
                "   binomial+ subsp maybe    f. maybe",
                "   binomial+ var   maybe    f. monomial",
                "   binomial+ subsp maybe    f. monomial",
                "A. monomial                 f. monomial",
                "A. monomial  var   monomial f. monomial",
                "A. monomial  subsp monomial f. monomial",
                "A. monomial                 f. maybe",
                "A. monomial  var   monomial f. maybe",
                "A. monomial  subsp monomial f. maybe",
                "A. monomial  var   maybe    f. maybe",
                "A. monomial  subsp maybe    f. maybe",
                "A. monomial  var   maybe    f. monomial",
                "A. monomial  subsp maybe    f. monomial",
                "A. maybe                    f. monomial",
                "A. maybe     var   monomial f. monomial",
                "A. maybe     subsp monomial f. monomial",
                "A. maybe                    f. maybe",
                "A. maybe     var   monomial f. maybe",
                "A. maybe     subsp monomial f. maybe",
                "A. maybe     var   maybe    f. maybe",
                "A. maybe     subsp maybe    f. maybe",
                "A. maybe     var   maybe    f. monomial",
                "A. maybe     subsp maybe    f. monomial",
            ],
        ),
        Compiler(
            label="taxon",
            id="subform",
            decoder=decoder,
            patterns=[
                "   binomial+                subf monomial",
                "   binomial+ var   monomial subf monomial",
                "   binomial+ subsp monomial subf monomial",
                "   binomial+                subf maybe",
                "   binomial+ var   monomial subf maybe",
                "   binomial+ subsp monomial subf maybe",
                "   binomial+ var   maybe    subf maybe",
                "   binomial+ subsp maybe    subf maybe",
                "   binomial+ var   maybe    subf monomial",
                "   binomial+ subsp maybe    subf monomial",
                "A. monomial                 subf monomial",
                "A. monomial  var   monomial subf monomial",
                "A. monomial  subsp monomial subf monomial",
                "A. monomial                 subf maybe",
                "A. monomial  var   monomial subf maybe",
                "A. monomial  subsp monomial subf maybe",
                "A. monomial  var   maybe    subf maybe",
                "A. monomial  subsp maybe    subf maybe",
                "A. monomial  var   maybe    subf monomial",
                "A. monomial  subsp maybe    subf monomial",
                "A. maybe                    subf monomial",
                "A. maybe     var   monomial subf monomial",
                "A. maybe     subsp monomial subf monomial",
                "A. maybe                    subf maybe",
                "A. maybe     var   monomial subf maybe",
                "A. maybe     subsp monomial subf maybe",
                "A. maybe     var   maybe    subf maybe",
                "A. maybe     subsp maybe    subf maybe",
                "A. maybe     var   maybe    subf monomial",
                "A. maybe     subsp maybe    subf monomial",
            ],
        ),
        Compiler(
            label="bad_taxon",
            decoder=decoder,
            patterns=[
                "bad_prefix :?    monomial",
                "bad_prefix :? A. monomial",
                "                 monomial  bad_suffix",
                "              A. monomial  bad_suffix",
                "bad_prefix :?    monomial  bad_suffix",
                "bad_prefix :? A. monomial  bad_suffix",
                "bad_prefix :?    binomial+",
                "                 binomial+ bad_suffix",
                "bad_prefix :?    binomial+ bad_suffix",
            ],
        ),
    ]
